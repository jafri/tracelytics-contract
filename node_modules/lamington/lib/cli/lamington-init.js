"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const colors = require("colors");
const projectManager_1 = require("./../project/projectManager");
/**
 * Executes a contract build procedure
 * @note Keep alive setup is incomplete
 * @author Mitch Pierias <github.com/MitchPierias>
 * @author Kevin Brown <github.com/thekevinbrown>
 */
const run = () => __awaiter(void 0, void 0, void 0, function* () {
    yield projectManager_1.ProjectManager.initWithDefaults();
    console.log(colors.white(`

    .                                       .                 
    /       ___  , _ , _   \` , __     ___. _/_     __.  , __  
    |      /   \` |' \`|' \`. | |'  \`. .'   \`  |    .'   \ |'  \`.
    |     |    | |   |   | | |    | |    |  |    |    | |    |
    /---/ \`.__/| /   '   / / /    |  \`---|  \\__/  \`._.' /    |
                                     \___/                    
   
   `));
});
run().catch(error => {
    process.exitCode = 1;
    console.log(error);
});
