import { Api } from 'eosjs';
import { Account } from './account';
interface AccountCreationOptions {
    creator?: Account;
    eos?: Api;
}
export declare class AccountManager {
    /**
     * Generates a new random account
     * @note Shorthand method for [[AccountManager.createAccounts]]
     * @author Kevin Brown <github.com/thekevinbrown>
     * @param options Optional account creation settings
     * @returns Result returned from [[AccountManager.createAccounts]]
     */
    static createAccount: (options?: AccountCreationOptions | undefined) => Promise<Account>;
    /**
     * Generates a specified number of random accounts
     * @author Kevin Brown <github.com/thekevinbrown>
     * @param numberOfAccounts Number of accounts to generate
     * @returns Array of created account transaction promises
     */
    static createAccounts: (numberOfAccounts?: number, options?: AccountCreationOptions | undefined) => Promise<Account[]>;
    /**
     * Publishes a new account and allocates ram where possible
     * @author Kevin Brown <github.com/thekevinbrown>
     * @param account [[Account]] to publish
     * @param options Optional account settings
     * @returns Transaction result promise
     */
    static setupAccount: (account: Account, options?: AccountCreationOptions | undefined) => Promise<any>;
    /**
     * Grants `eosio.code` permission to the specified account's `active` key
     * @note Can also be called directly on a contract.
     * @author Kevin Brown <github.com/thekevinbrown>
     * @author Mitch Pierias <github.com/MitchPierias>
     * @param account Account without `eosio.code` permissions
     */
    static addCodePermission: (account: Account) => Promise<void>;
    /**
     * Flattens account creation options
     * @author Kevin Brown <github.com/thekevinbrown>
     * @returns Account creation options
     */
    private static flattenOptions;
}
export {};
//# sourceMappingURL=accountManager.d.ts.map